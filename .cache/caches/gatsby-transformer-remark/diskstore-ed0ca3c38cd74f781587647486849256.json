{"expireTime":9007200862013605000,"key":"transformer-remark-markdown-html-f9ced269b681b9f435895e439979c5a8--","val":"<p>This is going to a short article about how I've used SQLite3 in Python to make a server-side application that communicated with a database.</p>\n<p>In this project, I used Flask although I suppose you could use django too.\nThe idea is simply: in each different route that you set up, you may call different SQL commands. </p>\n<h2>Why I went with Flask and not Django</h2>\n<p>Some more text here about why I chose to go with Flask.\nMostly because: </p>\n<ol>\n<li>Flask is a micro framework which served me well because I wasn't looking to build a fully-fledged application.</li>\n<li>As a direct consequence from the first one, the learning curve to understand Flask is that bit smaller, and as someone with a lot of ongoing projects I don't want to end getting diverted with learning a bunch of other stuff in order to accomplish one specific task.</li>\n<li>Flask will lend itself well for Raspberry Pi applications where I want to post information to a server website.</li>\n</ol>\n<h2>Why I didn't use Express</h2>\n<p>Simply because I knew that sqlite existed in Python, and I have occasionally stumbled on posts online that trash Express (or other node-based server-side frameworks) for not having as good relational database integration as Python's frameworks.</p>"}