{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/index.js","webpack:///./src/components/Posts.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["getSimplifiedPosts","posts","options","map","post","id","node","slug","fields","tags","frontmatter","title","CustomHeader","styled","div","Title","h1","Subtitle","CustomBody","ButtonLink","props","SectionTitleDiv","IndexPage","data","latest","edges","simplifiedLatest","useMemo","projects","simplifiedProjects","personal","simplifiedPersonal","Section","children","button","class","to","query","CleanLink","ArticleHeading","PostsList","Posts","key","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"2FAAO,SAASA,EAAmBC,EAAOC,GACtC,YADoD,IAAdA,MAAU,IACzCD,EAAME,KAAI,SAACC,GAAD,MAAW,CAC1BC,GAAID,EAAKE,KAAKD,GACdE,KAAMH,EAAKE,KAAKE,OAAOD,KACvBE,KAAML,EAAKE,KAAKI,YAAYD,KAC5BE,MAAOP,EAAKE,KAAKI,YAAYC,UALnC,mC,oOCSMC,G,UAAeC,IAAOC,IAAV,yEAAGD,CAAH,mDAMZE,EAAQF,IAAOG,GAAV,kEAAGH,CAAH,4HAWLI,EAAWJ,IAAOC,IAAV,qEAAGD,CAAH,gKAkBRK,EAAaL,IAAOC,IAAV,uEAAGD,CAAH,mCAeVM,EAAaN,aAAO,SAAAO,GAAK,OAAI,kBAAC,OAASA,MAA7B,uEAAGP,CAAH,yTAsBVQ,EAAkBR,IAAOC,IAAV,4EAAGD,CAAH,qqBA8CN,SAASS,EAAT,GAAgC,IAAVC,EAAS,EAATA,KAC7BC,EAASD,EAAKC,OAAOC,MACrBC,EAAmBC,mBAAQ,kBACjC3B,YAAmBwB,KAAS,CAACA,IAEvBI,EAAWL,EAAKK,SAASH,MACzBI,EAAqBF,mBAAQ,kBACnC3B,YAAmB4B,KAAW,CAACA,IAEzBE,EAAWP,EAAKO,SAASL,MACzBM,EAAqBJ,mBAAQ,kBACnC3B,YAAmB8B,KAAW,CAACA,IAEzBE,EAAU,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,OAAWd,EAA/B,oDACd,iCACE,kBAACC,EAAoBD,EACnB,yBAAKe,MAAM,WACX,yBAAKA,MAAM,UAAS,4BAAKxB,IACzB,yBAAKwB,MAAM,UACVD,GACG,kBAACf,EAAD,CAAYiB,GAAG,aAAf,cAMLH,IAIL,OACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtB,MAAM,SACX,kBAACC,EAAD,KACI,kBAACG,EAAD,4BACA,kBAACE,EAAD,KACE,gGACA,sKAGN,kBAACC,EAAD,KACE,kBAACc,EAAD,CAASrB,MAAM,kBAAkBuB,QAAM,GACrC,kBAAC,IAAD,CAAOX,KAAMG,KAGf,kBAACM,EAAD,CAASrB,MAAM,YACb,kBAAC,IAAD,CAAOY,KAAMM,KAGf,kBAACG,EAAD,CAASrB,MAAM,oBACb,kBAAC,IAAD,CAAOY,KAAMQ,OAQd,IAAMM,EAAK,c,kCCzLlB,mFAIMC,EAAYzB,aAAO,SAAAO,GAAK,OAAI,kBAAC,OAASA,MAA7B,mEAAGP,CAAH,+FAUT0B,EAAiB1B,IAAOC,IAAV,wEAAGD,CAAH,4gBAgDd2B,EAAY3B,IAAOC,IAAV,mEAAGD,CAAH,yBAKA,SAAS4B,EAAT,GAA0B,IAATlB,EAAQ,EAARA,KAC5B,OACI,kBAACiB,EAAD,KACGjB,EAAKpB,KAAI,SAACG,GAAD,OACR,kBAACiC,EAAD,CAAgBG,IAAKpC,EAAKD,IAC1B,kBAACiC,EAAD,CAAWF,GAAI9B,EAAKC,MAChB,2BAAID,EAAKK,e,kCCzEV,SAASgC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIF,EAAKI,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCJ,EAAMM,EAAWF,GACbD,EAASO,QAAQV,IAAQ,IAC7BK,EAAOL,GAAOE,EAAOF,IAGvB,OAAOK,EAZT","file":"component---src-pages-index-js-ed4f7d538ab3bf8e079d.js","sourcesContent":["export function getSimplifiedPosts(posts, options = {}) {\n    return posts.map((post) => ({\n      id: post.node.id,\n      slug: post.node.fields.slug,\n      tags: post.node.frontmatter.tags,\n      title: post.node.frontmatter.title,\n    }))\n  }","import React, {useMemo} from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Posts from \"../components/Posts\"\nimport styled from \"styled-components\"\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport \"../components/layout.css\"\n\nconst CustomHeader = styled.div`\n  padding: 1px 0px;\n  margin: auto;\n  max-width: 650px;\n`\n\nconst Title = styled.h1`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  line-height: 30px;\n  \n  @media screen and (min-width: 650px) {\n    margin: 30px 0;\n    line-height: 40px;\n  }\n`\n\nconst Subtitle = styled.div`\n  margin: auto;\n  padding: auto 10px;\n\n  p {\n    padding: 0px auto;\n    line-height: 20px;\n  }\n\n  @media screen and (min-width: 650px) {\n    margin: auto;\n    padding: auto 10px;\n    p {\n      line-height: 40px;\n    }\n  }\n`\n\nconst CustomBody = styled.div`\n  padding: 5px 5px;\n  margin 5px 0;\n`\n\n/* \nconst Icon = styled.div`\n  display: none;\n\n  @media screen and (min-width: 650px) {\n  padding: 10px 10px;\n  display: inline;\n  }\n`   */\n\nconst ButtonLink = styled(props => <Link {...props} />)`\n    color: black;\n    text-decoration: none;\n    box-shadow: none;\n    background: #e6e9ed;\n    font-size: 14px;\n    line-height: 12px;\n    padding: 1px 2px;\n    border-radius: 4px;\n\n    @media screen and (min-width: 800px) {\n      color: black;\n      text-decoration: none;\n      box-shadow: none;\n      background: #e6e9ed;\n      font-size: 18px;\n      line-height: 14px;\n      padding: 1.5px 3px;\n      border-radius: 4px;\n    }\n`;\n\nconst SectionTitleDiv = styled.div`\n  display: grid;\n  grid-template-columns: 0px 175px 75px;\n  grid-template-rows: auto auto auto;\n  padding-bottom: 5px;\n  margin: 0;\n  margin-top: 20px;\n  border-bottom: 3px solid #e6e9ed;\n  text-align: left\n  .item1, .item-2, .item-3 {\n    display: inline-block;\n    margin-bottom: 0px;\n    padding: 0;\n  }\n  h3 {\n    margin: 0;\n  }\n  .item-3 {\n    text-align: center;\n    justify-content: center;\n    margin: auto 0px;\n  }\n\n  @media screen and (min-width: 800px) {\n    display: grid;\n    grid-template-columns: 75px 620px 75px;\n    grid-template-rows: auto auto auto;\n    padding-bottom: 10px;\n    margin: 5px auto;\n    margin-top: 40px;\n    border-bottom: 3px solid #e6e9ed;\n    .item-1, .item-2, .item-3 {\n      margin-bottom: 0px;\n      padding: 0px;\n      h3{\n        margin: auto;\n      }\n    }\n    .item-3 {\n      text-align: center;\n      justify-content: center;\n      margin: auto 0px;\n    }\n  }\n`\n\nexport default function IndexPage ({ data })  {\n  const latest = data.latest.edges\n  const simplifiedLatest = useMemo(() =>\n  getSimplifiedPosts(latest), [latest])\n\n  const projects = data.projects.edges\n  const simplifiedProjects = useMemo(() =>\n  getSimplifiedPosts(projects), [projects])\n\n  const personal = data.personal.edges\n  const simplifiedPersonal = useMemo(() =>\n  getSimplifiedPosts(personal), [personal])\n  \n  const Section = ({ title, children, button, ...props }) => (\n    <section>\n      <SectionTitleDiv {...props}>\n        <div class=\"item-1\"></div>\n        <div class=\"item-2\"><h3>{title}</h3></div>\n        <div class=\"item-3\"> \n        {button && (\n            <ButtonLink to=\"/articles\">\n              View all\n            </ButtonLink>\n        )}\n        </div>\n      </SectionTitleDiv>\n      {children}\n    </section>\n  )\n\n  return (\n  <Layout>\n    <SEO title=\"Home\" />\n    <CustomHeader>\n        <Title>Hi there, I'm Marta</Title>\n        <Subtitle>\n          <p>A software engineer with an enthusiasm for IoT and data security.</p>\n          <p>This space is intended to store my ideas and ongoing learning progress, as well to distribute any helpful advice and past experience.</p>\n        </Subtitle>\n    </CustomHeader>\n    <CustomBody>\n      <Section title=\"Latest articles\" button>\n        <Posts data={simplifiedLatest}/>\n      </Section>\n\n      <Section title=\"Projects\">\n        <Posts data={simplifiedProjects}/>\n      </Section>\n\n      <Section title=\"Personal updates\">\n        <Posts data={simplifiedPersonal}/>\n      </Section>\n\n    </CustomBody>\n  </Layout>\n  )\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 3 \n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: \"article\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      limit: 3 \n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: \"project\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    personal: allMarkdownRemark(\n      limit: 3 \n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: \"opinion\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst CleanLink = styled(props => <Link {...props} />)`\n    color: black;\n    text-decoration: none;\n    box-shadow: none;\n    margin: 0px;\n    padding: 0px;\n    line-height: 16px;\n`;\n\n\nconst ArticleHeading = styled.div`\n  margin: 0;\n  padding: 0 3px;\n  padding-left: 0px;\n  align-items: center;\n  border-bottom: 2px solid #e6e9ed;\n  .article-title{\n    margin: auto;\n    padding: auto;\n    text-align: left;\n  }\n  .tag {\n    display: none;\n  }\n  a {\n      padding: 0;\n      margin:\n  }\n\n  @media screen and (min-width: 650px) {\n    margin: 5px 0;\n    padding: 5px 5px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n    border-bottom: 0px;\n\n    :hover {\n      background-color: #e6e9ed;\n      border-radius: 5px;\n    }\n\n    .article-title{\n      text-align: left;\n      flex: 1;\n    }\n\n    .tag {\n      display: block;\n      font-size: 14px;\n      padding: 2px 5px;\n      background-color: #faf5c3;\n      border-radius: 5px;\n      margin: 0 1px;\n    }\n  }\n`\n\nconst PostsList = styled.div`\n  margin: 0;\n  padding: 0;\n`\n\nexport default function Posts({ data }) {\n    return (\n        <PostsList>\n          {data.map((node) => (\n            <ArticleHeading key={node.id}>\n            <CleanLink to={node.slug}>\n                <p>{node.title}</p>\n            </CleanLink>\n            </ArticleHeading>\n        ))}\n        </PostsList>\n      )\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}